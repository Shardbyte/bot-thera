# Build Docker Image
name: build-image


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 13 * * 1'

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      TITLE: Thera-DiscordBot
      GHCR_SLUG: ghcr.io/shardbyte/bot-thera
      DOCK_SLUG: docker.io/shardbyte/bot-thera
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_SLUG }}
            ${{ env.DOCK_SLUG }}
          labels: |
            maintainer=${{ github.repository_owner }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.title=${{ env.TITLE }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push core
        uses: docker/build-push-action@v5
        with:
          target: core
          platforms: |
            linux/amd64
            linux/arm/v7
            linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.GHCR_SLUG }}:core
            ${{ env.DOCK_SLUG }}:core
          build-args: |
            PCX_DISCORDBOT_BUILD=${{ github.run_id }}
            PCX_DISCORDBOT_COMMIT=${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
      -
        name: Check manifest
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ env.GHCR_SLUG }}:core
          docker buildx imagetools inspect ${{ env.DOCK_SLUG }}:core
      -
        name: Check pull
        if: github.event_name != 'pull_request'
        run: |
          docker pull ${{ env.GHCR_SLUG }}:core
          docker image inspect ${{ env.GHCR_SLUG }}:core
          docker pull ${{ env.DOCK_SLUG }}:core
          docker image inspect ${{ env.DOCK_SLUG }}:core
